'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.objMatchesStruct = exports.struct = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _clonedeep = require('lodash/clonedeep');

var _clonedeep2 = _interopRequireDefault(_clonedeep);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var struct = exports.struct = function struct(structObj) {
  var createStruct = function createStruct(obj) {
    if (!objMatchesStruct(structObj, obj)) throw new Error('Invalid struct data!');

    var data = {
      obj: Object.freeze(obj),
      struct: Object.freeze(structObj)
    };

    Object.assign(data, obj);
    return Object.freeze(data);
  };

  createStruct.struct = Object.freeze(structObj);
  return createStruct;
};

var objMatchesStruct = exports.objMatchesStruct = function objMatchesStruct(struct, obj) {
  return verifyFields(struct, obj) && verifyFields(obj, struct) && verifyTypes(struct, obj);
};

var verifyFields = function verifyFields(a, b) {
  return Object.keys(a).reduce(function (previous, current) {
    return previous ? typeof b[current] != 'undefined' : previous;
  }, true);
};

var verifyTypes = function verifyTypes(struct, obj) {
  return Object.keys(struct).reduce(function (previous, current) {
    return previous ? _typeof(obj[current]) == struct[current] : previous;
  }, true);
};